<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net">
  <!--实际证明 框架的版本如果比较新的话能够兼容组件比较久的版本的 还是配置有错的地方
  没有拿到那个类的实例--> 
  <object type="AppMvc.Areas.Admin.Controllers.UserInfoController, AppMvc" singleton="false" >
    <property name="UserInfoService" ref="UserInfoService" />
    <property name="RoleService" ref="RoleService" />
  </object>
  <object type="AppMvc.Areas.Admin.Controllers.RoleInfoController, AppMvc" singleton="false" >
    <property name="RoleService" ref="RoleService" />
    <property name="ActionInfoService" ref="ActionInfoService" />
  </object>
  <object type="AppMvc.Areas.Admin.Controllers.ActionInfoController, AppMvc" singleton="false" >
    <property name="ActionInfoService" ref="ActionInfoService" />
  </object>
  <object type="AppMvc.Areas.Admin.Controllers.CategoryController, AppMvc" singleton="false" >
    <property name="CategoryService" ref="CategoryService" />
  </object>
  <!--<object  type="CZBK.ItcastOA.WebApp.Controllers.LoginController, CZBK.ItcastOA.WebApp" singleton="false" >
    <property name="UserInfoService" ref="UserInfoService" />
  </object>-->
  
  <!--intentionally do NOT register the AccountController or the ValuesController with the container; demonstrates that the underlying
  default controller factory will properly (attempt to!) resolve all controllers not registered with Spring.NET
  using its default controller resolution behavoir-->
  <!--<object type="Spring.Mvc4QuickStart.Controllers.AccountController, Spring.Mvc4QuickStart" singleton="false" />-->
  <!--<object type="Spring.Mvc4QuickStart.Controllers.ValuesController, Spring.Mvc4QuickStart" singleton="false" />-->
</objects>

1. 可以根据模型来生成数据库
2. 数据库里面数据很多如何管理 不是特别的关键  （管理不是关键。但是要考虑数据多的时候 程序如何设计和开发）
3. 合适的技术 使用在合适的地方。。
4. 一定要多敲代码 多敲代码 多敲代码 
5. 代码一定是敲出来的 敲出来的 敲出来的。
6. JetBrains.ReSharper.web.exe 自动的帮你引用命名空间 这个还挺好用的。
7.不是静态类的静态方法 也可以支架点出来  static方法是类中的一个成员方法,属于整个类,即不用创建任何对象也可以直接调用! 
8. 有的时候就是一个知识点 查询一下 百度 就能搞定。不用太纠结
9. 这一层只要管上一次层提供了什么东西。 要为下一层提供什么东西。 就行了。。不用一下专到最底层的东西去。
10. 一层一层的做事情 这样能够简单明了的多。。
11. 学习下别人 子类中的数据层数据是怎么添加 有哪些可以添加 基本上也没有了 除了 查询 增删改 还要什么呢。。
12. 这个项目将的都是一个一个技术点 但是业务点 说的相对比较少。 看起来功能不多。但是 都是要自己花一点事件再去做一下的
13.盘古分词 redis web  service    wcf 权限模块 工作流模块
14. Web Services 脚本平台需支持 XML + HTTP。
15. 整合了原有的windows通讯的 .net Remoting，WebService，Socket的机制，并融合有HTTP和FTP的相关技术。
16. 找教程 找一个系列的 全部都有的。。能做出一个东西来的。 讲完了 会使用的 快熟上手。
17. 想要做一个可以全双工的互相发送消息的技术使用。



### 已经知道的问题。

- 之前添加的数据无法删除 报错循环引用

- 搜索条件的引用 条件过滤应该在service 封装一个方法

- 父级分类条件完成

- 用户角色 权限 登陆 菜单 模块 系统设置 这一个模块的功能做完就哇晒了。 菜单这里就是权限组 是菜单权限的关系
列出所有的权限组 列出权限组下的菜单。

- 建立一个项目 公司用到组件也放到这个项目里面测试 学习 使用

- 下载demo查看 官网 查看系列教程。 学习demo 建立一个演示的demo学习 使用 在项目中使用。

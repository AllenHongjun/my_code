<!doctype html>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<meta name="keywords" content="jquery,ui,easy,easyui,web framekwork,ajax framekwork,ria,web development">
		<meta name="description" content="easyui help you build your web page easily!">
		<title>datagrid - jQuery EasyUI中文帮助手册</title>
        <link rel="stylesheet" href="main.css" type="text/css" />
		<link type="text/css" rel="stylesheet" href="SyntaxHighlighter.css"></link>
		<script src="shCore.js"></script>
		<script src="shBrushJScript.js"></script>
		<script src="shBrushXml.js"></script>
                <script type="text/javascript">
                /*120*270，创建于2011-12-16*/ 
                var cpro_id = 'u713814';
                </script>
                <script src="http://cpro.baidu.com/cpro/ui/f.js" type="text/javascript"></script>
	</head>
	<body>
		<div id="header">
						<div id="header-inner">
				<table cellpadding="0" cellspacing="0" style="width:100%;">
					<tr>
						<td rowspan="2" style="width:20px;">
						</td>
						<td style="height:52px;">
							<div style="color:#fff;font-size:22px;font-weight:bold;">
								<a href="http://www.jeasyui.com/" style="color:#fff;font-size:22px;font-weight:bold;text-decoration:none">jQuery EasyUI</a>
							</div>
							<div style="color:#fff">
								<a href="http://www.jeasyui.com/" style="color:#fff;text-decoration:none">jQuery EasyUI 框架帮助你轻松建立站点。</a>
							</div>
						</td>
					</tr>
				</table>
			</div>
			
		</div>
		<div id="mainwrap">
			<div id="content">
			


<div style="padding:10px">



<h3>数据表格</h3>

<p>继承$.fn.panel.defaults，使用$.fn.datagrid.defaults重载默认值。</p>



<h4>依赖关系</h4>

<ul>

	<li>控制面板</li>

	<li>缩放</li>

	<li>链接按钮</li>

	<li>分页</li>

</ul>



<h4>使用方法</h4>

<textarea name="code-datagrid" class="html">
	<table id="tt"></table>
</textarea>

<textarea name="code-datagrid" class="js">
	$('#tt').datagrid({
		url:'datagrid_data.json',
		columns:[[
			{field:'code',title:'Code',width:100},
			{field:'name',title:'Name',width:100},
			{field:'price',title:'Price',width:100,align:'right'}
		]]
	});
</textarea>



<h4>数据表格属性</h4>

<p>属性继承控制面板，以下是数据表格独有的属性。</p>

<table class="doc-table">

<tr>

<th><strong>名称</strong></th>
<th><strong>类型</strong></th>
<th><strong>描述</strong></th>
<th><strong>默认值</strong></th>

</tr>

<tr>

<td>columns（列）</td>

<td>array（数组）</td>

<td>数据表格列配置对象，查看列属性以获取更多细节。</td>

<td>null</td>

</tr>

<tr>

<td>frozenColumns（固定列）</td>

<td>array（数组）</td>



<td>跟列属性一样，但是这些列固定在左边，不会滚动。</td>

<td>null</td>

</tr>

<tr>

<td>fitColumns（自适应列宽）</td>

<td>boolean（布尔型）</td>

<td>设置为true将自动使列适应表格宽度以防止出现水平滚动。</td>

<td>false</td>

</tr>

<tr>

<td>striped（显示条纹）</td>



<td>boolean（布尔型）</td>

<td>设置为true将交替显示行背景。</td>

<td>false</td>

</tr>

<tr>

<td>method（方法）</td>

<td>string（字符串）</td>

<td>请求远程数据的方法类型。</td>

<td>post</td>

</tr>



<tr>

<td>nowrap（截取）</td>

<td>boolean（布尔型）</td>

<td>设置为true，当数据长度超出列宽时将会自动截取。</td>

<td>true</td>

</tr>

<tr>

<td>idField（id字段）</td>

<td>string（字符串）</td>

<td>表明该列是一个唯一列。</td>



<td>null</td>

</tr>

<tr>

<td>url（超链接）</td>

<td>string（字符串）</td>

<td>一个用以从远程站点请求数据的超链接地址。</td>

<td>null</td>

</tr>

<tr>

<td>loadMsg（载入时信息）</td>

<td>string（字符串）</td>



<td>当从远程站点载入数据时，显示的一条快捷信息。</td>

<td>Processing, please wait &#8230;</td>

</tr>

<tr>

<td>pagination（分页）</td>

<td>boolean（布尔型）</td>

<td>设置true将在数据表格底部显示分页工具栏。</td>

<td>false</td>

</tr>

<tr>

<td>rownumbers（行数）</td>



<td>boolean（布尔型）</td>

<td>设置为true将显示行数。</td>

<td>false</td>

</tr>

<tr>

<td>singleSelect（单选模式）</td>

<td>boolean（布尔型）</td>

<td>设置为true将只允许选择一行。</td>

<td>false</td>

</tr>



<tr>

<td>pageNumber（当前页码）</td>

<td>number（数字）</td>

<td>当设置分页属性时，初始化分页码。</td>

<td>1</td>

</tr>

<tr>

<td>pageSize（每页记录数）</td>

<td>number（数字）</td>

<td>当设置分页属性时，初始化每页记录数。</td>



<td>10</td>

</tr>

<tr>

<td>pageList（可选择的每页记录数）</td>

<td>array</td>

<td>当设置分页属性时，初始化每页记录数列表。</td>

<td>[10,20,30,40,50]</td>

</tr>

<tr>

<td>queryParams（查询参数）</td>

<td>object（对象）</td>



<td>当请求远程数据时，发送的额外参数。</td>

<td>{}</td>

</tr>

<tr>

<td>sortName（默认排序）</td>

<td>string（字符串）</td>

<td>当数据表格初始化时以哪一列来排序。</td>

<td>null</td>

</tr>

<tr>

<td>sortOrder（排序顺序）</td>



<td>string（字符串）</td>

<td>定义排序顺序，可以是'asc'或者'desc'（正序或者倒序）。</td>

<td>asc</td>

</tr>

<tr>

<td>remoteSort（远程排序）</td>

<td>boolean（布尔型）</td>

<td>定义是否通过远程服务器对数据排序。</td>

<td>true</td>

</tr>



<tr>

<td>showFooter（显示行底）</td>

<td>boolean（布尔型）</td>

<td>定义是否显示行底（如果是做统计表格，这里可以显示总计等）。</td>

<td>false</td>

</tr>

<tr>

<td>rowStyler（行样式）</td>

<td>function（函数）</td>

<td>返回样式，如：'background:red'，function有2个参数：<br />


index：行索引，从0开始.<br />

row：对应于该行记录的对象。</td>

<td></td>

</tr>

<tr>

<td>loadFilter（载入过滤器）</td>

<td>function（函数）</td>

<td>返回用以显示的已过滤数据，function有一个参数'data'表示原始数据，你可以将原始数据改变为规范的数据格式，该函数必须返回包含 'total'和'rows'属性的标准数据对象。</td>

<td></td>

</tr>

<tr>

<td>editors（编辑模式）</td>



<td>object（对象）</td>

<td>定义当编辑一行时的编辑模式。</td>

<td>predefined editors</td>

</tr>

<tr>

<td>view（视图）</td>

<td>object（对象）</td>

<td>定义数据表格的视图。</td>

<td>default view</td>

</tr>



</table>



<h4>列属性</h4>

<p>数据表格的列是一个对象数组，即这个对象中的元素也是一个数组（js中数组是对象）。

对象数组中的每一个元素都是可配置的对象，每个可配置对象定义一个列。<p>

<p>示例代码:</p>

<textarea name="code-datagrid" class="js">

	columns:[[
		{field:'itemid',title:'Item ID',rowspan:2,width:80,sortable:true},
		{field:'productid',title:'Product ID',rowspan:2,width:80,sortable:true},
		{title:'Item Details',colspan:4}
	],[
		{field:'listprice',title:'List Price',width:80,align:'right',sortable:true},
		{field:'unitcost',title:'Unit Cost',width:80,align:'right',sortable:true},
		{field:'attr1',title:'Attribute',width:100},
		{field:'status',title:'Status',width:60}
	]]
</textarea>

<p></p>



<table class="doc-table">

<tr>

<th><strong>名称</strong></th>
<th><strong>类型</strong></th>
<th><strong>描述</strong></th>
<th><strong>默认值</strong></th>



</tr>

<tr>

<td>title（标题）</td>

<td>string（字符串）</td>

<td>列标题。</td>

<td>undefined</td>

</tr>

<tr>

<td>field（字段）</td>

<td>string（字符串）</td>

<td>列字段。</td>



<td>undefined</td>

</tr>

<tr>

<td>width（宽度）</td>

<td>number（数字）</td>

<td>列宽。</td>

<td>undefined</td>

</tr>

<tr>

<td>rowspan（跨行数）</td>

<td>number（数字）</td>



<td>表明一个单元格跨几行。</td>

<td>undefined</td>

</tr>

<tr>

<td>colspan（跨列数）</td>

<td>number（数字）</td>

<td>表明一个单元格跨几列。</td>

<td>undefined</td>

</tr>

<tr>

<td>align（对其方式）</td>



<td>string（字符串）</td>

<td>表明如何对其列数据，可选值：'left'，'right'，'center'。</td>

<td>undefined</td>

</tr>

<tr>

<td>sortable（可排序）</td>

<td>boolean（布尔型）</td>

<td>设置为true允许对该列排序。</td>

<td>undefined</td>

</tr>



<tr>

<td>resizable（缩放）</td>

<td>boolean（布尔型）</td>

<td>设置为true允许该列被缩放。</td>

<td>undefined</td>

</tr>

<tr>

<td>hidden（隐藏）</td>

<td>boolean（布尔型）</td>

<td>设置为true将隐藏列。</td>



<td>undefined</td>

</tr>

<tr>

<td>checkbox（复选框）</td>

<td>boolean（布尔型）</td>

<td>设置为true将显示复选框。</td>

<td>undefined</td>

</tr>

<tr>

<td>formatter（格式化）</td>

<td>function（函数）</td>



<td>格式化单元格函数，有3个参数：<br />

value：字段的值。<br />

rowData：行数据。<br />

rowIndex：行索引。</td>

<td>undefined</td>

</tr>

<tr>

<td>styler（样式）</td>

<td>function（函数）</td>

<td>单元格样式函数，返回样式字符串装饰表格如'background:red'，function有3个参数：<br />



value：字段值。<br />

rowData：行数据。<br />

rowIndex：行索引。</td>

<td>undefined</td>

</tr>

<tr>

<td>sorter（排序器）</td>

<td>function（函数）</td>

<td>T自定义字段排序函数，有2个参数：<br />

a：该列的第一个值。<br />



b：该列的第二个值。</td>

<td>undefined</td>

</tr>

<tr>

<td>editor（编辑器）</td>

<td>string,object（字符串，对象）</td>

<td>表明编辑类型。如果属性是字符串类型表示编辑类型，如果是对象则包含2个参数：<br />

type：字符串，编辑类型，可选值：text，textarea，checkbox，numberbox，validatebox，datebox，combobox，combotree。<br />

options：对象，对象于编辑类型的编辑器属性。</td>

<td>undefined</td>



</tr>

</table>



<h4>编辑器</h4>

<p>使用$.fn.datagrid.defaults.editors重载默认值。<p>

<p>每个编辑器都有以下方法：</p>

<table class="doc-table">

<tr>

<th><strong>名称</strong></th>
<th><strong>参数</strong></th>
<th><strong>描述</strong></th>

</tr>

<tr>

<td>init</td>

<td>container, options</td>

<td>初始化编辑器并返回目标对象。</td>

</tr>

<tr>

<td>destroy</td>

<td>target</td>



<td>销毁编辑器。</td>

</tr>

<tr>

<td>getValue</td>

<td>target</td>

<td>获取编辑框的值。</td>

</tr>

<tr>

<td>setValue</td>

<td>target , value</td>

<td>设置编辑框的值。</td>



</tr>

<tr>

<td>resize</td>

<td>target , width</td>

<td>调整编辑器</td>

</tr>

</table>



<p>例如，如下代码将定义一个文本编辑器：</p>

<textarea name="code-datagrid" class="js">
	$.extend($.fn.datagrid.defaults.editors, {
		text: {
			init: function(container, options){
				var input = $('<input type="text" class="datagrid-editable-input">').appendTo(container);
				return input;
			},
			getValue: function(target){
				return $(target).val();
			},
			setValue: function(target, value){
				$(target).val(value);
			},
			resize: function(target, width){
				var input = $(target);
				if ($.boxModel == true){
					input.width(width - (input.outerWidth() - input.width()));
				} else {
					input.width(width);
				}
			}
		}
	});
</textarea>



<h4>数据表格视图</h4>

<p>使用$.fn.datagrid.defaults.view重载默认值。</p>

<p>视图是一个告诉数据表格如何呈现行记录的对象，对象必须定义以下方法：</p>

<table class="doc-table">

<tr>

<th><strong>名称</strong></th>

<th><strong>参数</strong></th>



<th><strong>描述</strong></th>

</tr>

<tr>

<td>render</td>

<td>target, container, frozen</td>

<td>当数据载入时调用。<br />

target: DOM对象，数据网格对象。<br />

container: 行记录容器。<br />

frozen: 是否呈现固定容器。</td>

</tr>



<tr>

<td>renderFooter</td>

<td>target, container, frozen</td>

<td>这是一个可选函数用以展现行底。</td>

</tr>

<tr>

<td>renderRow</td>

<td>target, fields, frozen, rowIndex, rowData</td>

<td>这是一个可选函数，它可以被render函数调用。</td>

</tr>

<tr>



<td>refreshRow</td>

<td>target, rowIndex</td>

<td>定义如何刷新指定的行。</td>

</tr>

<tr>

<td>onBeforeRender</td>

<td>target, rows</td>

<td>在视图被呈现之前触发。</td>

</tr>

<tr>

<td>onAfterRender</td>



<td>target</td>

<td>在视图被程序之后触发。</td>

</tr>

</table>



<h4>事件</h4>

<p>事件继承控制面板，以下是数据表格独有的属性。</p>

<table class="doc-table">



<tr>

<th><strong>名称</strong></th>
<th><strong>参数</strong></th>
<th><strong>描述</strong></th>

</tr>

<tr>

<td>onLoadSuccess</td>

<td>data</td>

<td>当数据载入成功时触发。</td>

</tr>

<tr>



<td>onLoadError</td>

<td>none</td>

<td>当载入远程数据发生错误时触发。</td>

</tr>

<tr>

<td>onBeforeLoad</td>

<td>param</td>

<td>在请求载入数据之前触发，如果返回false将取消载入。</td>

</tr>

<tr>

<td>onClickRow</td>



<td>rowIndex, rowData</td>

<td>当用户点击行时触发，参数如下：<br />

rowIndex：被点击的行索引，从0开始。<br />

rowData：对应于被点击的行的记录。</td>

</tr>

<tr>

<td>onDblClickRow</td>

<td>rowIndex, rowData</td>

<td>当用户双击一行时触发，参数如下：<br />

rowIndex：被点击的行索引，从0开始。<br />



rowData：对应于被点击的行的记录。</td>

</tr>

<tr>

<td>onClickCell</td>

<td>rowIndex, field, value</td>

<td>当用户点击单元格时触发。</td>

</tr>

<tr>

<td>onDblClickCell</td>

<td>rowIndex, field, value</td>

<td>当用户双击单元格时触发。</td>



</tr>

<tr>

<td>onSortColumn</td>

<td>sort, order</td>

<td>当用户对列排序时触发，参数如下：<br />

sort：排序字段名称。<br />

order：排序顺序。</td>

</tr>

<tr>

<td>onResizeColumn</td>
<td>field, width</td>
<td>当用户调整列宽时触发。</td>

</tr>

<tr>

<td>onSelect</td>

<td>rowIndex, rowData</td>

<td>当用户选择一行是触发，参数如下：<br />

rowIndex：被选择的行索引，从0开始。<br />

rowData：对应于被选择行的记录。</td>

</tr>

<tr>

<td>onUnselect</td>



<td>rowIndex, rowData</td>

<td>当用户取消选择一行时触发，参数如下：<br />

rowIndex：被取消选择的行索引，从0开始。<br />

rowData：对应于被取消选择行的记录。</td>

</tr>

<tr>

<td>onSelectAll</td>

<td>rows</td>

<td>当用户选择所有行时触发。</td>

</tr>



<tr>

<td>onUnselectAll</td>

<td>rows</td>

<td>当用户取消选择所有行时触发。</td>

</tr>

<tr>

<td>onBeforeEdit</td>

<td>rowIndex, rowData</td>

<td>当用户开始编辑一行时触发，参数如下：<br />

rowIndex：正在编辑的行索引，从0开始。<br />



rowData：对应于正在编辑的行的记录。</td>

</tr>

<tr>

<td>onAfterEdit</td>

<td>rowIndex, rowData, changes</td>

<td>当用户编辑完成时触发，参数如下：<br />

rowIndex：正在编辑的行索引，从0开始。<br />

rowData：对应于正在编辑的行的记录。<br />

changes：被改变的字段内容，对应方式为字段：值。</td>

</tr>



<tr>

<td>onCancelEdit</td>

<td>rowIndex, rowData</td>

<td>当用户取消编辑行时触发，参数如下：<br />

rowIndex：正在编辑的行索引，从0开始。<br />

rowData：对应于正在编辑的行的记录。</td>

</tr>

<tr>

<td>onHeaderContextMenu</td>

<td>e, field</td>



<td>当数据表格的列标题被鼠标右键单击时触发。</td>

</tr>

<tr>

<td>onRowContextMenu</td>

<td>e, rowIndex, rowData</td>

<td>当一行被鼠标右键单击时触发。</td>

</tr>

</table>



<h4>方法</h4>

<table class="doc-table">

<tr>

<th><strong>名称</strong></th>
<th><strong>参数</strong></th>
<th><strong>描述</strong></th>

</tr>

<tr>

<td>options</td>

<td>none</td>



<td>返回属性对象。</td>

</tr>

<tr>

<td>getPager</td>

<td>none</td>

<td>返回页面对象。</td>

</tr>

<tr>

<td>getPanel</td>

<td>none</td>

<td>返回控制面板对象。</td>



</tr>

<tr>

<td>getColumnFields</td>

<td>frozen</td>

<td>返回列字段，如果设置了frozen属性为true，将返回固定列的字段名。</td>

</tr>

<tr>

<td>getColumnOption</td>

<td>field</td>

<td>返回特定的列属性。</td>

</tr>



<tr>

<td>resize</td>

<td>param</td>

<td>缩放和布局。</td>

</tr>

<tr>

<td>load</td>

<td>param</td>

<td>载入并显示第一页的记录，如果传递了'param'参数，它将会覆盖查询参数属性的值。</td>

</tr>

<tr>



<td>reload</td>

<td>param</td>

<td>重载记录，跟'load'方法一样但是重载的是当前页的记录而非第一页。</td>

</tr>

<tr>

<td>reloadFooter</td>

<td>footer</td>

<td>重载行底记录。</td>

</tr>

<tr>

<td>loading</td>



<td>none</td>

<td>显示载入状态。</td>

</tr>

<tr>

<td>loaded</td>

<td>none</td>

<td>隐藏载入状态。</td>

</tr>

<tr>

<td>fitColumns</td>

<td>none</td>



<td>让列宽自动适应数据表格的宽度。</td>

</tr>

<tr>

<td>fixColumnSize</td>

<td>none</td>

<td>固定列尺寸。</td>

</tr>

<tr>

<td>fixRowHeight</td>

<td>index</td>

<td>固定特定列的高度。</td>



</tr>

<tr>

<td>loadData</td>

<td>data</td>

<td>载入本地数据，旧记录将被移除。</td>

</tr>

<tr>

<td>getData</td>

<td>none</td>

<td>返回已载入数据。</td>

</tr>



<tr>

<td>getRows</td>

<td>none</td>

<td>返回当前页的记录。</td>

</tr>

<tr>

<td>getFooterRows</td>

<td>none</td>

<td>返回行底记录。</td>

</tr>

<tr>



<td>getRowIndex</td>

<td>row</td>

<td>返回指定行的索引，row参数可以是行记录或者是一个id字段的值。</td>

</tr>

<tr>

<td>getSelected</td>

<td>none</td>

<td>返回第一个被选择的行记录或null。</td>

</tr>

<tr>

<td>getSelections</td>



<td>none</td>

<td>返回所有被选择的行，当没有记录被选择时，将返回一个空数组。</td>

</tr>

<tr>

<td>clearSelections</td>

<td>none</td>

<td>取消所有的已选择项。</td>

</tr>

<tr>

<td>selectAll</td>

<td>none</td>



<td>全选。</td>

</tr>

<tr>

<td>unselectAll</td>

<td>none</td>

<td>取消全选。</td>

</tr>

<tr>

<td>selectRow</td>

<td>index</td>

<td>选择一行，行索引从0开始。</td>



</tr>

<tr>

<td>selectRecord</td>

<td>idValue</td>

<td>通过传递id参数来选择一行。</td>

</tr>

<tr>

<td>unselectRow</td>

<td>index</td>

<td>取消选择一行。</td>

</tr>



<tr>

<td>beginEdit</td>

<td>index</td>

<td>开始编辑一行。</td>

</tr>

<tr>

<td>endEdit</td>

<td>index</td>

<td>结束编辑。</td>

</tr>

<tr>



<td>cancelEdit</td>

<td>index</td>

<td>取消编辑。</td>

</tr>

<tr>

<td>getEditors</td>

<td>index</td>

<td>获取指定行的编辑器，每个编辑器有如下属性：<br />

actions：编辑器可以做的行为。<br />

target：目标编辑器jQuery对象。<br />



field：字段名。<br />

type：编辑器类型。</td>

</tr>

<tr>

<td>getEditor</td>

<td>options</td>

<td>获取特定的编辑器，options参数有2个属性：<br />

index：行索引。<br />

field:字段名。</td>

</tr>



<tr>

<td>refreshRow</td>

<td>index</td>

<td>刷新一行。</td>

</tr>

<tr>

<td>validateRow</td>

<td>index</td>

<td>校验指定的行，如果有效返回true。</td>

</tr>

<tr>



<td>updateRow</td>

<td>param</td>

<td>更新指定的行，param参数包含如下属性：<br />

index：要更新的行索引。<br />

row：新的行数据。</td>

</tr>

<tr>

<td>appendRow</td>

<td>row</td>

<td>添加一行。</td>



</tr>

<tr>

<td>insertRow</td>

<td>param</td>

<td>插入一个新行，param参数包含如下属性：<br />

index：要插入的行索引，如果没有定义则在最后面添加一个新行。<br />

row：行数据。</td>

</tr>

<tr>

<td>deleteRow</td>

<td>index</td>



<td>删除一行。</td>

</tr>

<tr>

<td>getChanges</td>

<td>type</td>

<td>获取从最后一次提交开始的被修改的所有行，type参数表明修改的类型，可选值：inserted，deleted，updated等 。当没有传递type参数时，返回所有被修改的行。</td>

</tr>

<tr>

<td>acceptChanges</td>

<td>none</td>

<td>提交所有修改的数据，提交后的数据将不能再修改或者回滚。</td>



</tr>

<tr>

<td>rejectChanges</td>

<td>none</td>

<td>回滚所有被删除的行。</td>

</tr>

<tr>

<td>mergeCells</td>

<td>options</td>

<td>合并单元格，options参数包含如下属性：<br />

index：行索引。<br />



field：字段名。<br />

rowspan：整合单元格要跨的行数。<br />

colspan：整合单元格要跨的列数。</td>

</tr>

<tr>

<td>showColumn</td>

<td>field</td>

<td>显示特定的列。</td>

</tr>

<tr>

<td>hideColumn</td>



<td>field</td>

<td>隐藏特定的列。</td>

</tr>

</table>



</div>



﻿			</div>
		</div>
		<div id="footer">
			<div>Copyright © 2010-2011 www.jeasyui.com</div>
<a target="_blank" href="http://sighttp.qq.com/authd?IDKEY=0d8f551beb86c567f5d026fc3af8f8a0c1cf318635116789"><img border="0"  src="http://wpa.qq.com/imgd?IDKEY=0d8f551beb86c567f5d026fc3af8f8a0c1cf318635116789&pic=45" alt="点击Q我" title="点击Q我"></a>
|  
<noscript><a href="http://www.51.la/?4095651" target="_blank">
<img alt="&#x6211;&#x8981;&#x5566;&#x514D;&#x8D39;&#x7EDF;&#x8BA1;" src="http://img.users.51.la/4095651.asp" style="border:none" /></a></noscript> 
<script src="http://s17.cnzz.com/stat.php?id=2412230&web_id=2412230&show=pic" language="JavaScript"></script>|<script language="javascript" type="text/javascript" src="http://js.users.51.la/4095651.js"></script>
|<script type="text/javascript">
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F9541ae759aad5b1e7083c2f63b8e8e9c' type='text/javascript'%3E%3C/script%3E"));
</script>
		</div>
		<script type="text/javascript">
						dp.SyntaxHighlighter.ClipboardSwf = '/SyntaxHighlighter/Scripts/clipboard.swf';
			dp.SyntaxHighlighter.HighlightAll('code-datagrid');
		</script>
	</body>
</html>
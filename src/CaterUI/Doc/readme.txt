1、课程介绍
-》三层开发
-》使用sqlite数据库
-》版本控制器
-》拼音组件
-》excel导入导出
-》完成餐饮管理：管理员，会员，菜品，餐桌，点餐，支付

2、数据库设计
-》根据功能设计数据库，主要如下
	管理员管理
	会员及等级管理
	菜单及分类管理
	餐桌及厅包管理
	点菜
	结账

3、项目搭建
-》三层架构：将原来写在一个方法中的代码，分到三个层中编写
	数据访问层，业务逻辑层，展示层
	三层之关通过Model层的对象传递数据
-》编写SqliteHelper类
	连接字符串：data source=C:\Users\q1\Desktop\ItcastCater.db;version=3;
-》做管理员表的查询，在UI中使用datagridview显示数据，完成调用

4、版本控制器
-》项目经理：搭建基本框架，创建仓储，上传最原始的代码
-》员工：获取最新代码，完成后续开发，
	Update:将服务器代码更新本地代码
	Commit:将本地代码更新到服务器代码
	恢复历史版本：右键文件->show log->在指定版本上右键->revert
	对比：右键文件->show log->在指定版本上右键->compare with working copy
-》注意事项
	1、工作开始初次打开解决方案时应向服务器请求最新代码
	2、工作结束时，保证解决方案能够编译通过，然后应向服务器签入最新代码
	3、不要长时间签出项目或解决方案。当向项目添加新项后未编辑任何程序代码时，应立即签入项目，以便其他成员可操作该项目
	4、不要签出整个目录。并且除非特别必要，不应同时签出过多的项
	5、某工作步骤完成后，应编译整个项目以检验当前工作。如果不出现编译错误，则应尽快签入这部分代码
	6、不要不经过编译而签入可能不通过的代码。这将影响所有成员的进度
	7、依赖项也需要添加到版本库
	8、编译出来的文件不应该加入版本控制

5、管理员管理
-》店员crud
	密码采用md5加密
	分为经理（1）和店员（0），经理可以进行店员信息管理
-》注意：对于sqlite数据库的插入时需要列与值对应，即使有自增列，也不能省略


总结：使用SqliteStudio进行sqlite数据库的操作
	特殊点：insert语句需要提供指定列，即某些列是自动生成也不能忽略
三层架构，引入sqlite的程序集，写管理员表的crud
版本控制器svn:组长（创建仓储，上传架构），组员（下载副本，update,commit,showlog）

在2个小时内，完成一张的crud
<!doctype html>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<meta name="keywords" content="jquery,ui,easy,easyui,web framekwork,ajax framekwork,ria,web development">
		<meta name="description" content="easyui help you build your web page easily!">
		<title>tree - jQuery EasyUI中文帮助手册</title>
        <link rel="stylesheet" href="main.css" type="text/css" />
		<link type="text/css" rel="stylesheet" href="SyntaxHighlighter.css"></link>
		<script src="shCore.js"></script>
		<script src="shBrushJScript.js"></script>
		<script src="shBrushXml.js"></script>
                <script type="text/javascript">
                /*120*270，创建于2011-12-16*/ 
                var cpro_id = 'u713814';
                </script>
                <script src="http://cpro.baidu.com/cpro/ui/f.js" type="text/javascript"></script>
	</head>
	<body>
		<div id="header">
						<div id="header-inner">
				<table cellpadding="0" cellspacing="0" style="width:100%;">
					<tr>
						<td rowspan="2" style="width:20px;">
						</td>
						<td style="height:52px;">
							<div style="color:#fff;font-size:22px;font-weight:bold;">
								<a href="http://www.jeasyui.com/" style="color:#fff;font-size:22px;font-weight:bold;text-decoration:none">jQuery EasyUI</a>
							</div>
							<div style="color:#fff">
								<a href="http://www.jeasyui.com/" style="color:#fff;text-decoration:none">jQuery EasyUI 框架帮助你轻松建立站点。</a>
							</div>
						</td>
					</tr>
				</table>
			</div>
			
		</div>
		<div id="mainwrap">
			<div id="content">
			


<div style="padding:10px">



<h3>树形菜单</h3>

<p>使用$.fn.tree.defaults重载默认值。</p>



<h4>依赖关系</h4>

<ul>

	<li>一般拖动</li>

	<li>拖动至容器</li>

</ul>



<h4>使用方法</h4>

<p>树形菜单可以用&lt;ul&gt;标签定义，它可以定义叶子节点和子节点，代码示例如下：</p>

<textarea name="code-tree" class="html">

	<ul id="tt">
		<li>
			<span>Folder</span>
			<ul>
				<li>
					<span>Sub Folder 1</span>
					<ul>
						<li>
							<span><a href="#">File 11</a></span>
						</li>
						<li>
							<span>File 12</span>
						</li>
						<li>
							<span>File 13</span>
						</li>
					</ul>
				</li>
				<li>
					<span>File 2</span>
				</li>
				<li>
					<span>File 3</span>
				</li>
			</ul>
		</li>
		<li>
			<span>File21</span>
		</li>
	</ul>
</textarea>

<p>也可以用不带&lt;li&gt;的&lt;ul&gt;标签来定义：</p>

<textarea name="code-tree" class="html">
	<ul id="tt"></ul>
</textarea>

<textarea name="code-tree" class="js">
	$('#tt').tree({
		url:'tree_data.json'
	});
</textarea>



<h4>树形菜单的数据格式</h4>

<p>每个节点都拥有以下属性：</p>

<ul>

<li>id：节点id，对载入远程数据很重要。</li>

<li>text：显示在节点的文本。</li>

<li>state：节点状态，'open' or 'closed'，默认为'open'。当设置为'closed'时，拥有子节点的节点将会从远程站点载入它们。</li>

<li>checked：表明节点是否被选择。</li>

<li>attributes：可以为节点添加的自定义属性。</li>



<li>children：子节点，必须用数组定义。</li>

</ul>

<p>示例代码：</p>

<textarea name="code-tree" class="js">
	[{
		"id":1,
		"text":"Folder1",
		"iconCls":"icon-save",
		"children":[{
			"text":"File1",
			"checked":true
		},{
			"text":"Books",
			"state":"open",
			"attributes":{
				"url":"/demo/book/abc",
				"price":100
			},
			"children":[{
				"text":"PhotoShop",
				"checked":true
			},{
				"id": 8,
				"text":"Sub Bookds",
				"state":"closed"
			}]
		}]
	},{
		"text":"Languages",
		"state":"closed",
		"children":[{
			"text":"Java"
		},{
			"text":"C#"
		}]
	}]
</textarea>



<h4>属性</h4>

<table class="doc-table">

<tr>

<th><strong>名称</strong></th>
<th><strong>类型</strong></th>
<th><strong>描述</strong></th>
<th><strong>默认值</strong></th>

</tr>

<tr>



<td>url（超链接）</td>

<td>string（字符串）</td>

<td>用以载入远程数据的超链接地址。</td>

<td>null</td>

</tr>

<tr>

<td>method（方法）</td>

<td>string（字符串）</td>

<td>获取数据的HTTP方法。</td>

<td>post</td>



</tr>

<tr>

<td>animate（动画）</td>

<td>boolean（布尔型）</td>

<td>定义当节点打开或关闭时是否显示动画效果。</td>

<td>false</td>

</tr>

<tr>

<td>checkbox（复选框）</td>

<td>boolean（布尔型）</td>

<td>定义是否在每个节点之前显示复选框。</td>



<td>false</td>

</tr>

<tr>

<td>cascadeCheck（级联选择）</td>

<td>boolean（布尔型）</td>

<td>定义是否支持级联选择。</td>

<td>true</td>

</tr>

<tr>

<td>onlyLeafCheck（只选叶子节点）</td>

<td>boolean（布尔型）</td>



<td>定义是否只在叶子节点之前显示复选框。</td>

<td>false</td>

</tr>

<tr>

<td>dnd（拖放）</td>

<td>boolean（布尔型）</td>

<td>定义是否支持拖放。</td>

<td>false</td>

</tr>

<tr>

<td>data（数据）</td>



<td>array（数组）</td>

<td>将被载入的节点数据。</td>

<td>null</td>

</tr>

</table>



<h4>事件</h4>

<p>多数事件回调函数都有'node'参数，该参数包含如下属性：</p>

<ul>

<li>id：节点的唯一标识。</li>

<li>text：显示在节点上的文本。</li>

<li>checked：节点是否被选择。</li>

<li>attributes：节点的自定义属性。</li>

<li>target：目标DOM对象。</li>

</ul>



<table class="doc-table">



<tr>

<th><strong>名称</strong></th>
<th><strong>参数</strong></th>
<th><strong>描述</strong></th>

</tr>

<tr>

<td>onClick</td>

<td>node</td>

<td>当用户点击节点时触发，node参数包含如下属性：<br />

id：节点id。<br />



text：显示在节点上的文本。<br />

checked：节点是否被选择。<br />

attributes：节点的自定义属性。<br />

target：被点击的目标DOM对象。</td>

</tr>

<tr>

<td>onDblClick</td>

<td>node</td>

<td>当用户双击节点时触发。</td>

</tr>



<tr>

<td>onBeforeLoad</td>

<td>node, param</td>

<td>在请求载入数据之前触发，返回false将取消载入。</td>

</tr>

<tr>

<td>onLoadSuccess</td>

<td>node, data</td>

<td>当数据载入成功时触发。</td>

</tr>

<tr>



<td>onLoadError</td>

<td>arguments</td>

<td>当数据载入失败时触发，arguments参数跟jQuery.ajax的'error'函数一样。</td>

</tr>

<tr>

<td>onBeforeExpand</td>

<td>node</td>

<td>在节点打开之前触发，返回false将取消打开。</td>

</tr>

<tr>

<td>onExpand</td>



<td>node</td>

<td>在节点被打开时触发。</td>

</tr>

<tr>

<td>onBeforeCollapse</td>

<td>node</td>

<td>在节点被关闭之前触发，返回false将取消关闭。</td>

</tr>

<tr>

<td>onCollapse</td>

<td>node</td>



<td>当节点被关闭时触发。</td>

</tr>

<tr>

<td>onCheck</td>

<td>node, checked</td>

<td>当用户点击复选框时触发。</td>

</tr>

<tr>

<td>onBeforeSelect</td>

<td>node</td>

<td>在节点被选择之前触发，返回false将取消选择。</td>



</tr>

<tr>

<td>onSelect</td>

<td>node</td>

<td>当节点被选择时触发。</td>

</tr>

<tr>

<td>onContextMenu</td>

<td>e, node</td>

<td>当节点被鼠标右键点击时触发。</td>

</tr>



<tr>

<td>onDrop</td>

<td>target, source, point</td>

<td>当节点位置被（拖动）更换时触发。<br />

target：DOM对象，需要被拖动动的目标节点。<br />

source：原始节点。<br />

point：指明拖动方式，可选值：'append'，'top'或者'bottom'。</td>

</tr>

<tr>

<td>onBeforeEdit</td>



<td>node</td>

<td>在编辑节点之前触发。</td>

</tr>

<tr>

<td>onAfterEdit</td>

<td>node</td>

<td>在编辑节点之后触发。</td>

</tr>

<tr>

<td>onCancelEdit</td>

<td>node</td>



<td>当取消编辑时触发。</td>

</tr>

</table>



<h4>方法</h4>
<table class="doc-table">

<tr>
<th><strong>名称</strong></th>
<th><strong>参数</strong></th>
<th><strong>描述</strong></th>

</tr>

<tr>

<td>options</td>

<td>none</td>

<td>返回树形菜单属性对象。</td>

</tr>

<tr>

<td>loadData</td>

<td>data</td>

<td>载入树形菜单数据。</td>



</tr>

<tr>

<td>getNode</td>

<td>target</td>

<td>获取特定的节点对象。</td>

</tr>

<tr>

<td>getData</td>

<td>target</td>

<td>获取特定的节点数据，包括它的子节点。</td>

</tr>



<tr>

<td>reload</td>

<td>target</td>

<td>重新载入树形菜单数据。</td>

</tr>

<tr>

<td>getRoot</td>

<td>none</td>

<td>获取根节点，返回节点对象。</td>

</tr>

<tr>



<td>getRoots</td>

<td>none</td>

<td>获取根节点，返回节点数组。</td>

</tr>

<tr>

<td>getParent</td>

<td>target</td>

<td>获取父节点，target是一个节点DOM对象。</td>

</tr>

<tr>

<td>getChildren</td>



<td>target</td>

<td>获取子节点，target参数是一个节点DOM对象。</td>

</tr>

<tr>

<td>getChecked</td>

<td>none</td>

<td>获取所有被选择的节点。</td>

</tr>

<tr>

<td>getSelected</td>

<td>none</td>



<td>获取被选择的节点并返回，如果没有节点被选择则返回null。</td>

</tr>

<tr>

<td>isLeaf</td>

<td>target</td>

<td>判断指定的节点是否是叶子节点，target参数是一个节点DOM对象。</td>

</tr>

<tr>

<td>find</td>

<td>id</td>

<td>查找指定的节点并返回节点对象。</td>



</tr>

<tr>

<td>select</td>

<td>target</td>

<td>选择一个节点，target参数是一个节点DOM对象。</td>

</tr>

<tr>

<td>check</td>

<td>target</td>

<td>设置指定的节点为已选择状态。</td>

</tr>



<tr>

<td>uncheck</td>

<td>target</td>

<td>设置指定的节点为未选择状态。<</td>

</tr>

<tr>

<td>collapse</td>

<td>target</td>

<td>关闭节点，target参数是一个节点DOM对象。</td>

</tr>

<tr>



<td>expand</td>

<td>target</td>

<td>打开节点，target参数是一个节点DOM对象。</td>

</tr>

<tr>

<td>collapseAll</td>

<td>target</td>

<td>关闭所有的节点。</td>

</tr>

<tr>

<td>expandAll</td>



<td>target</td>

<td>打开所有的节点。</td>

</tr>

<tr>

<td>expandTo</td>

<td>target</td>

<td>打开从根节点到指定节点之间的所有节点。</td>

</tr>

<tr>

<td>append</td>

<td>param</td>



<td>添加若干子节点到一个父节点，param参数有2个属性：<br />

parent：DOM对象，将要被添加子节点的父节点，如果未指定，子节点将被添加至根节点。<br />

data：数组，节点数据。</td>

</tr>

<tr>

<td>toggle</td>

<td>target</td>

<td>打开或关闭节点的触发器，target参数是一个节点DOM对象。</td>

</tr>

<tr>

<td>insert</td>



<td>param</td>

<td>在一个指定节点之前或之后插入节点，'param'参数包含如下属性：<br />

before：DOM对象，在某个节点之前插入。<br />

after: DOM对象，在某个节点之后插入。<br />

data：对象，节点数据。</td>

</tr>

<tr>

<td>remove</td>

<td>target</td>

<td>移除一个节点和它的子节点，target参数是一个节点DOM对象。</td>



</tr>

<tr>

<td>pop</td>

<td>target</td>

<td>移除一个节点和它的子节点，该方法跟remove方法一样，不同的是它将返回被移除的节点数据。</td>

</tr>

<tr>

<td>update</td>

<td>param</td>

<td>更新指定的节点，param参数有如下属性：<br />

target(DOM对象，将被更新的目标节点)，id，text，iconCls，checked等。</td>



</tr>

<tr>

<td>enableDnd</td>

<td>none</td>

<td>启用拖动特性。</td>

</tr>

<tr>

<td>disableDnd</td>

<td>none</td>

<td>禁用拖动特性。</td>

</tr>



<tr>

<td>beginEdit</td>

<td>nodeEl</td>

<td>开始编辑节点。</td>

</tr>

<tr>

<td>endEdit</td>

<td>nodeEl</td>

<td>结束编辑节点。</td>

</tr>

<tr>



<td>cancelEdit</td>

<td>nodeEl</td>

<td>取消编辑节点。</td>

</tr>

</table>



</div>



﻿			</div>
		</div>
		<div id="footer">
			<div>Copyright © 2010-2011 www.jeasyui.com</div>
<a target="_blank" href="http://sighttp.qq.com/authd?IDKEY=0d8f551beb86c567f5d026fc3af8f8a0c1cf318635116789"><img border="0"  src="http://wpa.qq.com/imgd?IDKEY=0d8f551beb86c567f5d026fc3af8f8a0c1cf318635116789&pic=45" alt="点击Q我" title="点击Q我"></a>
|  
<noscript><a href="http://www.51.la/?4095651" target="_blank">
<img alt="&#x6211;&#x8981;&#x5566;&#x514D;&#x8D39;&#x7EDF;&#x8BA1;" src="http://img.users.51.la/4095651.asp" style="border:none" /></a></noscript> 
<script src="http://s17.cnzz.com/stat.php?id=2412230&web_id=2412230&show=pic" language="JavaScript"></script>|<script language="javascript" type="text/javascript" src="http://js.users.51.la/4095651.js"></script>
|<script type="text/javascript">
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F9541ae759aad5b1e7083c2f63b8e8e9c' type='text/javascript'%3E%3C/script%3E"));
</script>
		</div>
		<script type="text/javascript">
						dp.SyntaxHighlighter.ClipboardSwf = '/SyntaxHighlighter/Scripts/clipboard.swf';
			dp.SyntaxHighlighter.HighlightAll('code-tree');
		</script>
	</body>
</html>